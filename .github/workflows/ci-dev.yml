# .github/workflows/ci-dev.yml
name: CI - Development

on:
  push:
    branches:
      - development

env:
  REGISTRY: docker.io
  DOCKERHUB_REPO: rokfonovic

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device: [capnograph, ecg, infusion, ventilator, nibp, spo2, temperature]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Gradnja in potiskanje provider slik za vsako napravo
      - name: Build and push provider image ${{ matrix.device }}
        run: |
          docker build \
            --build-arg DEVICE_NAME=${{ matrix.device }} \
             -t ${{ env.REGISTRY }}/${{ env.DOCKERHUB_REPO }}/provider_${{ matrix.device }}:latest \
            -f infra/docker/python-provider.Dockerfile \
            ./services/sdc_providers
          docker push ${{ env.REGISTRY }}/${{ env.DOCKERHUB_REPO }}/provider_${{ matrix.device }}:latest

  build-backend:
    runs-on: ubuntu-latest
    needs: build-test-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Gradnja in potiskanje Node.js backend slike
      - name: Build and push Node.js backend
        run: |
          docker build \
            -t $REGISTRY/$DOCKERHUB_REPO/node-backend:latest \
            -f infra/docker/node.Dockerfile \
            ./services/backend
          docker push $REGISTRY/$DOCKERHUB_REPO/node-backend:latest

  build-fastapi:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Gradnja in potiskanje FastAPI (consumer) slike
      - name: Build and push FastAPI consumer
        uses: docker/build-push-action@v3
        with:
          context: ./services/fastapi
          file: infra/docker/fastapi.Dockerfile
          push: true
          tags: $REGISTRY/$DOCKERHUB_REPO/fastapi:latest

  build-frontend1:
    runs-on: ubuntu-latest
    needs: build-fastapi
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env.production
        run: |
          cat <<EOF > apps/webapp1_realtime_data/.env.production
          VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}
          EOF

      # Gradnja in potiskanje frontend1 (React - realtime data) slike
      - name: Build and push frontend1
        uses: docker/build-push-action@v3
        with:
          context: ./apps/webapp1_realtime_data
          file: infra/docker/react-display.Dockerfile
          push: true
          tags: $REGISTRY/$DOCKERHUB_REPO/frontend1-data:latest

  build-frontend2:
    runs-on: ubuntu-latest
    needs: build-frontend1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env.production
        run: |
          cat <<EOF > apps/webapp2_med_devices/.env.production
          VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}
          EOF

      # Gradnja in potiskanje frontend2 (React - device management) slike
      - name: Build and push frontend2
        uses: docker/build-push-action@v3
        with:
          context: ./apps/webapp2_med_devices
          file: infra/docker/react-admin.Dockerfile
          push: true
          tags: $REGISTRY/$DOCKERHUB_REPO/frontend2-admin:latest
